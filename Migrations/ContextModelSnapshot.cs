// <auto-generated />
using System;
using Airport;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airport.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Airport.Airplane", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("MaxDistance")
                        .HasColumnType("int");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<int?>("airportid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("airportid");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            MaxDistance = 6400,
                            Speed = 910.0,
                            airportid = 1,
                            name = "МС-21"
                        },
                        new
                        {
                            id = 2,
                            MaxDistance = 7200,
                            Speed = 850.0,
                            airportid = 2,
                            name = "Ту-214"
                        },
                        new
                        {
                            id = 3,
                            MaxDistance = 6570,
                            Speed = 835.0,
                            airportid = 3,
                            name = "Boeing 737 MAX"
                        },
                        new
                        {
                            id = 4,
                            MaxDistance = 13500,
                            Speed = 900.0,
                            airportid = 2,
                            name = "Boeing 777X"
                        });
                });

            modelBuilder.Entity("Airport.Airport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasAlternateKey("INN");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Count = 0,
                            Distance = 0,
                            INN = "1234567890",
                            address = "г.Москва",
                            name = "Шереметьево"
                        },
                        new
                        {
                            id = 2,
                            Count = 0,
                            Distance = 0,
                            INN = "1234567892",
                            address = "г.Москва",
                            name = "Внуково"
                        },
                        new
                        {
                            id = 3,
                            Count = 0,
                            Distance = 0,
                            INN = "1224567891",
                            address = "г.Москва",
                            name = "Домодедово"
                        },
                        new
                        {
                            id = 4,
                            Count = 0,
                            Distance = 7484,
                            INN = "1214567891",
                            address = "г.Токио",
                            name = "АэропортТокио"
                        },
                        new
                        {
                            id = 5,
                            Count = 0,
                            Distance = 2486,
                            INN = "1334567891",
                            address = "г.Париж",
                            name = "АэропортФранция"
                        },
                        new
                        {
                            id = 6,
                            Count = 0,
                            Distance = 1796,
                            INN = "1434567891",
                            address = "г.Анкара",
                            name = "АэропортАнкара"
                        },
                        new
                        {
                            id = 7,
                            Count = 0,
                            Distance = 7822,
                            INN = "1534567891",
                            address = "г.Вашингтон",
                            name = "АэропортСША"
                        });
                });

            modelBuilder.Entity("Airport.Destination", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFlying")
                        .HasColumnType("bit");

                    b.Property<int>("airplaneid")
                        .HasColumnType("int");

                    b.Property<byte>("flight_hours")
                        .HasColumnType("tinyint");

                    b.HasKey("id");

                    b.HasIndex("airplaneid");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("Airport.Airplane", b =>
                {
                    b.HasOne("Airport.Airport", "airport")
                        .WithMany("airplanes")
                        .HasForeignKey("airportid");

                    b.Navigation("airport");
                });

            modelBuilder.Entity("Airport.Destination", b =>
                {
                    b.HasOne("Airport.Airplane", "airplane")
                        .WithMany()
                        .HasForeignKey("airplaneid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("airplane");
                });

            modelBuilder.Entity("Airport.Airport", b =>
                {
                    b.Navigation("airplanes");
                });
#pragma warning restore 612, 618
        }
    }
}
